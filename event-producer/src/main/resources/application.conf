akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "INFO"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"
}

akka.kafka.producer {
  discovery-method = akka.discovery
  resolve-timeout = 3 seconds
  parallelism = 10000
  close-timeout = 60s
  close-on-producer-stop = true
  use-dispatcher = "akka.kafka.default-dispatcher"
  eos-commit-interval = 100ms
  kafka-clients {
  }
}

akka.kafka.consumer {
  discovery-method = akka.discovery
  resolve-timeout = 3 seconds
  poll-interval = 50ms
  poll-timeout = 50ms
  stop-timeout = 30s
  close-timeout = 20s
  commit-timeout = 15s
  commit-time-warning = 1s
  commit-refresh-interval = infinite
  use-dispatcher = "akka.kafka.default-dispatcher"
  kafka-clients {
    # Disable auto-commit by default
    enable.auto.commit = false
  }
  wait-close-partition = 500ms
  position-timeout = 5s
  offset-for-times-timeout = 5s
  metadata-request-timeout = 5s
  eos-draining-check-interval = 30ms
  partition-handler-warning = 5s
  connection-checker {
    enable = false
    max-retries = 3
    check-interval = 15s
    backoff-factor = 2.0
  }
}

akka.kafka.committer {
  max-batch = 1000
  max-interval = 10s
  parallelism = 100
  delivery = WaitForAck
  when = OffsetFirstObserved
}

akka.kafka.default-dispatcher {
  type = "Dispatcher"
  executor = "thread-pool-executor"

  thread-pool-executor {
    fixed-pool-size = 8
  }
}


